define([], function() {function anonymous(it) {
var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (function (doNotSkipEncoded) {
		var encodeHTMLRules = { "&": "&#38;", "<": "&#60;", ">": "&#62;", '"': "&#34;", "'": "&#39;", "/": "&#47;" },
			matchHTML = doNotSkipEncoded ? /[&<>"'\/]/g : /&(?!#?\w+;)|<|>|"|'|\//g;
		return function(code) {
			return code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : "";
		};
	}());var out='<div class="profile user-data"> <form name="user-data-form" class="user-data-form" method="put"> <div class="row"> <div class="col-lg-3 col-md-4"><div class="form-group"> <label>Image</label> <div class="image img-responsive thumbnail empty"></div> <input type="hidden" name="image" tabindex="-1"/></div><div class="image-controls hidden"> <a  href="#" class="btn btn-default btn-xs upload"> <i class="fa fa-upload"></i> Change </a> <a  href="#" class="btn btn-default btn-xs remove"> <i class="fa fa-trash"></i> Clear </a></div> </div> <div class="col-lg-9 col-md-8">';if(it.data.getValue("social_id")){out+='<div class="form-group ';if(it.data.hasErrors('username')){out+='has-error';}out+='"> <label for="username">Username</label> <input type="username" name="username" tabindex="1" class="form-control" id="username" placeholder="'+encodeHTML(it.data.getValue('username'))+'" autocomplete="off"/> <ul class="list-unstyled"> ';var arr1=it.data.getErrors("username");if(arr1){var err,idx=-1,l1=arr1.length-1;while(idx<l1){err=arr1[idx+=1];out+=' <li>'+encodeHTML(err)+'</li> ';} } out+=' </ul></div>';}out+='<div class="form-group ';if(it.data.hasErrors('gender')){out+='has-error';}out+='"> <label for="gender">Gender</label> <input name="gender" tabindex="2" class="form-control" placeholder="'+encodeHTML(it.data.getValue('gender'))+'"/> <small class="info">Optional. Visible for others.</small> <ul class="list-unstyled"> ';var arr2=it.data.getErrors("gender");if(arr2){var err,idx=-1,l2=arr2.length-1;while(idx<l2){err=arr2[idx+=1];out+=' <li>'+encodeHTML(err)+'</li> ';} } out+=' </ul></div><div class="form-group ';if(it.data.hasErrors('city')){out+='has-error';}out+='"> <label for="city">City</label> <input name="city" tabindex="3" class="form-control" placeholder="'+encodeHTML(it.data.getValue('city'))+'"/> <small class="info">Optional. Visible for others. Used when you enable location filters.</small> <ul class="list-unstyled"> ';var arr3=it.data.getErrors("city");if(arr3){var err,idx=-1,l3=arr3.length-1;while(idx<l3){err=arr3[idx+=1];out+=' <li>'+encodeHTML(err)+'</li> ';} } out+=' </ul></div><div class="form-group ';if(it.data.hasErrors('country')){out+='has-error';}out+='"> <label for="country">Country</label> <input name="country" tabindex="4" class="form-control" placeholder="'+encodeHTML(it.data.getValue('country'))+'"/> <small class="info">Optional. Visible for others. Used when you enable location filters.</small> <ul class="list-unstyled"> ';var arr4=it.data.getErrors("country");if(arr4){var err,idx=-1,l4=arr4.length-1;while(idx<l4){err=arr4[idx+=1];out+=' <li>'+encodeHTML(err)+'</li> ';} } out+=' </ul></div><div class="form-group ';if(it.data.hasErrors('about')){out+='has-error';}out+='"> <label for="about">About me</label> <textarea name="about" tabindex="6" class="form-control" placeholder="'+encodeHTML(it.data.getValue('about'))+'"></textarea> <small class="info">Optional. Visible for others.</small> <ul class="list-unstyled"> ';var arr5=it.data.getErrors("about");if(arr5){var err,idx=-1,l5=arr5.length-1;while(idx<l5){err=arr5[idx+=1];out+=' <li>'+encodeHTML(err)+'</li> ';} } out+=' </ul></div><div class="form-group"> <button type="submit" class="btn btn-primary">Update</button></div> </div> </div> </form></div>';return out;
}
return anonymous;
});
