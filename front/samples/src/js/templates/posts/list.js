define([], function() {function anonymous(it) {
var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (function (doNotSkipEncoded) {
		var encodeHTMLRules = { "&": "&#38;", "<": "&#60;", ">": "&#62;", '"': "&#34;", "'": "&#39;", "/": "&#47;" },
			matchHTML = doNotSkipEncoded ? /[&<>"'\/]/g : /&(?!#?\w+;)|<|>|"|'|\//g;
		return function(code) {
			return code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : "";
		};
	}());var out='<div class="posts grid-rows-spaced grid-striped"> ';var arr1=it.data;if(arr1){var post,idx=-1,l1=arr1.length-1;while(idx<l1){post=arr1[idx+=1];out+=' <div class="row row-bordered"> <div class="col-sm-3 hidden-xs"> <div class="image">';if(post.thumbnail_url && post.thumbnail_url.length){out+='<img src="'+encodeHTML( post.thumbnail_url)+'" alt="X" title="image" class="img-responsive center-block"/>';}else{out+='<i class="fa fa-eye"></i>';}out+=' </div> </div> <div class="col-sm-9 col-xs-12 content"> <div class="content-data"><br/><strong> <a href="'+encodeHTML(it.helpers.route(':posts:post', {id: post.id}))+'" class="post-url"> ';if(post.content_type){out+=' ['+encodeHTML( post.content_type.toUpperCase())+'] ';}out+=' '+encodeHTML( post.title)+' </a></strong><ul class="list-inline"> <li><a href="'+encodeHTML(it.helpers.route(':users:user', {id: post.author}))+'">@'+encodeHTML( post.author)+'</a></li> ';if(post.language_code){out+=' <li> <a href="'+encodeHTML(it.helpers.route(':languages:language', {id: post.language_code}))+'">['+encodeHTML( post.language_code.toUpperCase())+']</a> </li> ';}out+=' <li> ( <a href="'+encodeHTML( post.src_url)+'" title="'+encodeHTML( post.src_url)+'" class="src-url" target="_blank" data-bypass=""> <i class="fa fa-external-link"></i> '+encodeHTML( it.helpers.url.getDomain(post.src_url))+' </a> ) </li></ul><p class="hidden-xs"> '+encodeHTML( post.description )+'</p><div class="meta"> <ul class="list-inline meta"> <li>'+encodeHTML( it.helpers.datetime.unixToUTCDateTime(post.ctime) )+'</li> <li><i class="fa fa-eye"></i> '+encodeHTML( post.stat_views)+'</li> <li>(<a href="'+encodeHTML(it.helpers.route(':categories:category', {id: post.category_id}))+'">'+encodeHTML(post.category)+'</a>)</li> ';var arr2=((post.tags || []).length > 3 ? post.tags.slice(0, 3) : post.tags);if(arr2){var tag,i2=-1,l2=arr2.length-1;while(i2<l2){tag=arr2[i2+=1];out+=' <li class="tag"><a href="'+encodeHTML(it.helpers.route(':tags:tag', {id: tag}))+'">'+encodeHTML(tag)+'</a></li> ';} } out+=' </ul></div> </div> <div class="score pull-left"><span><a href="#" class="vote plus fa fa-plus" data-id="'+encodeHTML( post.id)+'"> </a></span><span><a href="#" class="vote minus fa fa-minus" data-id="'+encodeHTML( post.id)+'"> </a></span><span class="user-score"> ';if(post.top){out+=' <i class="fa fa-bolt top"></i> ';}else if(post.rising){out+=' <i class="fa fa-star-o rising"></i> ';}out+=' +'+encodeHTML( post.stat_votes_plus || "0")+' / -'+encodeHTML( post.stat_votes_minus || "0")+'</span><span class="anonymous-score hidden-xs"> (+'+encodeHTML( post.stat_anon_votes_plus || "0")+' / -'+encodeHTML( post.stat_anon_votes_minus || "0")+')</span><span> <a href="'+encodeHTML(it.helpers.route(':posts:post', {id: post.id, _hash: 'comments'}))+'"> <i class="fa fa-comments"></i> ('+encodeHTML((post.stat_total_comments || "0"))+') </a></span> </div> </div> </div> ';} } out+='</div>';return out;
}
return anonymous;
});
